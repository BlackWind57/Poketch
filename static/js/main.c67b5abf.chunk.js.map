{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/Heading.js","lib/String.js","components/PokemonList.js","components/Home.js","lib/MathLib.js","components/PokemonDetail.js","components/MyPokemonList.js","App.js","reportWebVitals.js","index.js"],"names":["appReducer","state","action","type","pokemons","payload","loading","error","bodyObject","filter","pokemon","_id","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","addPokemonToMyList","removePokemonFromMyList","fetchData","fetch","process","then","response","json","data","fetchingMyPokemons","catch","console","fetchingError","e","log","Heading","className","to","String","capitalizeFirstLetter","string","charAt","toUpperCase","slice","GET_POKEMONS","gql","gqlVariables","limit","offset","Item","styled","div","Image","img","Container","Box","PokemonList","useContext","useQuery","variables","message","Fragment","results","length","map","i","name","title","src","image","alt","url","Home","MathLib","randomNumber","Math","random","GET_POKEMON_DETAIL","ImageBox","Content","Title","Description","Type","Move","BottomMenu","PokemonDetail","route","useState","count","expanded","showMore","setShowMore","useEffect","match","params","handleShowMore","moves","nickNameExists","nick_name","toLowerCase","handleCatch","a","method","headers","body","JSON","stringify","ok","alert","sprites","front_default","types","child","move","onClick","enteredName","prompt","savedPokemon","image_url","bind","handleRelease","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.c67b5abf.chunk.js","sourcesContent":["export default function appReducer(state, action) {\n  switch (action.type) {\n    case \"ADD_POKEMON\":\n      return {\n        ...state,\n        pokemons: [...state.pokemons, action.payload],\n      };\n\n    case \"FETCH_SUCCESS\":\n      const updatedPokemons = action.payload;\n\n      return {\n        pokemons: updatedPokemons,\n        loading: false,\n        error: '',\n        bodyObject: action.payload\n      }\n\n    case \"FETCH_ERROR\":\n      return {\n        pokemons: state.pokemons,\n        loading: false,\n        error: action.payload,\n        bodyObject: {}\n      }\n\n    case \"REMOVE_POKEMON\":\n      return {\n        ...state,\n        pokemons: state.pokemons.filter(\n          (pokemon) => pokemon._id !== action.payload._id\n        ),\n      };\n\n\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from 'react';\n\nimport appReducer from './AppReducer';\n\nconst initialState = {\n    pokemons: [],\n    loading: true,\n    error: '',\n    bodyObject: ''\n};\n\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  function addPokemonToMyList(pokemon) {\n    dispatch({\n      type: \"ADD_POKEMON\",\n      payload: pokemon\n    });\n  }\n\n  function removePokemonFromMyList(pokemon) {\n    dispatch({\n      type: \"REMOVE_POKEMON\",\n      payload: pokemon\n    });\n  }\n\n  function fetchingMyPokemons ( data ) {\n    dispatch ( {\n      type: 'FETCH_SUCCESS',\n      payload: data\n    });\n  }\n\n  function fetchingError ( error ) {\n    dispatch ( {\n      type: 'FETCH_ERROR',\n      payload: error\n    });\n  }\n\n  function fetchData() {\n    try {\n      if (state.loading) {\n        fetch(process.env.REACT_APP_URL +\"/pokemon/my-list\")\n        .then ( response => response.json() )\n        .then ( data => {\n          fetchingMyPokemons ( data );\n        })\n        .catch ( error => {\n          console.error( error );\n          fetchingError ( error );\n        });\n      }\n\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        pokemons: state.pokemons,\n        loading: state.loading,\n        error: state.error,\n        addPokemonToMyList,\n        removePokemonFromMyList,\n        fetchData\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Heading = () => {\n  return (\n    <div>\n      <div className=\"flex items-center mt-24 mb-10\">\n        <div className=\"flex-grow text-right px-4 py-2 m-2\">\n          <Link to=\"/my-list\">\n            <button className=\"bg-green-400 hover:bg-green-500 text-white font-semibold py-2 px-4 rounded inline-flex items-center\">\n              <span className=\"pl-2\">My Pokemons</span>\n            </button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n","\nconst String = {\n\n  capitalizeFirstLetter: ( string ) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n}\n\nexport default String;\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { gql, useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\n\nimport styled from '@emotion/styled';\n\nimport String from '../lib/String';\n\nconst GET_POKEMONS = gql `\n  query pokemons($limit: Int, $offset: Int) {\n    pokemons(limit: $limit, offset: $offset) {\n      count\n      next\n      previous\n      status\n      message\n      results {\n        url\n        name\n        image\n      }\n    }\n  }\n`;\n\nconst gqlVariables = {\n  limit: 130,\n  offset: 1,\n};\n\n/////////////////// CSS START\nconst Item = styled.div`\n  text-align: center;\n`;\n\nconst Image = styled.img `\n  margin: 0 auto;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  margin-left: 20px;\n  margin-right: 20px;\n  justify-content: center;\n\n  /* Responsive layout - makes a one column layout instead of a two-column layout */\n  @media (max-width: 320) {\n    flex-direction: column;\n  }\n`;\n\nconst Box = styled.div`\n  padding-left: 5px;\n  padding-right: 5px;\n  margin-left: 5px;\n  margin-right: 5px;\n  height: 20vh;\n  -webkit-align-items: center;\n  align-items: center;\n  --tw-bg-opacity: 1;\n  background-color: rgba(243, 244, 246, var(--tw-bg-opacity));\n  margin-bottom: 10px;\n  --tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(0 0 #0000, 0 0 #0000), var(--tw-shadow);\n`;\n//////////////////// CSS ENDS\n\n\n\nexport const PokemonList = () => {\n  const { addPokemonToMyList } = useContext(GlobalContext);\n\n  // Fetch pokemons from Pokemon Graphql as data\n  const { loading, error, data } = useQuery(GET_POKEMONS, {\n    variables: gqlVariables,\n  });\n\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n  console.log('Response from server', data);\n\n  return (\n    <React.Fragment>\n      {data.pokemons.results.length > 0 ? (\n        <Container>\n          <React.Fragment>\n            {data.pokemons.results.map( (pokemon, i) => (\n              <Link\n                to={`/detail/${pokemon.name}`}\n                title=\"\"\n                key={pokemon.name}\n              >\n                <Box>\n                    <Item>\n                      <Image src={pokemon.image} alt={ pokemon.url } />\n                      <p className=\"text-gray-900 leading-none\">\n                        { String.capitalizeFirstLetter( pokemon.name ) }\n                      </p>\n                    </Item>\n                </Box>\n              </Link>\n            ))}\n          </React.Fragment>\n        </Container>\n      ) : (\n        <p className=\"text-center bg-gray-100 text-gray-500 py-5\">No data.</p>\n      )}\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { Heading } from \"./Heading\";\nimport { PokemonList } from \"./PokemonList\";\n\nexport const Home = () => {\n  return (\n    <React.Fragment>\n      <div className=\"container mx-auto\">\n        <h3 className=\"text-center text-3xl mt-20 text-base leading-8 text-black font-bold tracking-wide uppercase\">\n          Pokemon List\n        </h3>\n        <Heading />\n        <PokemonList />\n      </div>\n    </React.Fragment>\n  );\n};\n","\nconst MathLib = {\n\n  randomNumber () {\n    return Math.random() < 0.5 ? 0 : 1;\n  }\n\n}\n\nexport default MathLib;\n","import React, { useContext, useState, useEffect, useCallback } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { gql, useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\n\nimport String from '../lib/String';\nimport MathLib from '../lib/MathLib';\n\nimport styled from '@emotion/styled';\n\n\nconst GET_POKEMON_DETAIL = gql `\n  query pokemon($name: String!) {\n    pokemon(name: $name) {\n      id\n      name\n      sprites {\n        front_default\n      }\n      abilities {\n        ability {\n          name\n        }\n      }\n      moves {\n        move {\n          name\n        }\n      }\n      types {\n        type {\n          name\n        }\n      }\n      message\n      status\n    }\n  }\n`;\n\n// CSS\nconst Container = styled.div `\n  height: 100%;\n  min-height: 100vh;\n  background-image: linear-gradient(175deg, #eaee44, #33d0ff);\n  opacity: 0.7;\n\n  h4 {\n    font-weight: bold;\n    padding-top: 10px;\n  }\n`;\n\nconst ImageBox = styled.div `\n  justify-content: center;\n  margin-bottom: 25px;\n\n  img {\n    margin: 0 auto;\n    height: 30vh;\n  }\n`;\n\nconst Content = styled.div `\n  margin: 0 10px;\n  background-color: rgba(243, 244, 246, 1);\n  box-shadow: var ( 0 0 #0000, 0 0 #0000), var(0 0 #0000, 0 0 #0000), var(0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06));\n  border-radius: 8px;\n  padding-bottom: 20px;\n  margin-bottom: 20px;\n`;\n\nconst Title = styled.div `\n  text-align: center;\n  font-weight: bold;\n  font-size: 24px;\n  padding-top: 30px;\n`;\n\nconst Description = styled.div `\n  text-align: center;\n  padding: 20px auto;\n\n  a {\n    text-decoration: underline;\n    font-size: 14px;\n  }\n`;\n\nconst Type = styled.div `\n  margin-bottom: 20px;\n`;\n\nconst Move = styled.div `\n  display: flex;\n  flex-wrap: wrap;\n\n  p {\n    margin: 5px 0;\n    width: 50%;\n  }\n`;\n\nconst BottomMenu = styled.div `\n  position: fixed;\n  bottom: 20px;\n  justify-content: center;\n  text-align: center;\n  width: 100%;\n  background: transparent;\n\n  button {\n    margin: 5px 5px;\n    padding: 8px 16px;\n    font-weight: 600;\n    border-radius: 9999px;\n    color: rgba(31, 41, 55, 1);\n    display: inline-block;\n    background-color: rgba(209, 213, 219, 1);\n  }\n\n  button:hover {\n    background-color: rgba(156, 163, 175, 1);\n  }\n\n`;\n\n\nexport const PokemonDetail = ( route ) => {\n  const { addPokemonToMyList, pokemons, fetchData } = useContext(GlobalContext);\n\n  const [showMore, setShowMore] = useState ({\n    count: 4,\n    expanded: false\n  });\n\n  useEffect ( () => {\n    fetchData();\n  }, []);\n\n  // Get detail of the pokemon\n  const { loading, error, data } = useQuery(GET_POKEMON_DETAIL, {\n    variables: { name: route.match.params.name },\n  });\n\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n  const pokemon = data.pokemon;\n\n  console.log( pokemons );\n\n  // Handler\n  const handleShowMore = ( expanded ) => {\n    if ( expanded ) {\n      setShowMore ( { ...showMore, count: pokemon.moves.length, expanded: expanded } );\n    }\n    else {\n      setShowMore ( { ...showMore, count: 4, expanded: expanded } );\n    }\n  }\n\n  const nickNameExists = ( nick_name, pokemon ) => {\n    if ( nick_name == null ) return false;\n\n    for (let i = 0; i < pokemons.length; i++) {\n      if ( pokemons[i].name === pokemon.name\n          && pokemons[i].nick_name.toLowerCase() === nick_name.toLowerCase() ) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  const handleSuccessCatch = ( pokemon ) => {\n    try {\n      let num = MathLib.randomNumber ();\n\n      if ( num === 1 ) {\n\n        var enteredName = prompt (\"Congratulations! You have captured a/an \"+ pokemon.name +\". Enter the pokemon's nickname.\");\n\n        while ( nickNameExists (enteredName, pokemon) ) {\n          enteredName = prompt (\"The entered nickname for that pokemon has already existed. Please enter a different nickname.\");\n        }\n\n        var savedPokemon = {\n          name: pokemon.name,\n          nick_name: enteredName,\n          image_url: pokemon.sprites.front_default\n        }\n        handleCatch( savedPokemon );\n      }\n      else {\n        alert ( \"Catching Pokemon Unsuccessful\" );\n      }\n    }\n    catch (e) {\n      console.log( e );\n    }\n  }\n\n  const handleCatch = async ( pokemon ) => {\n\n    try {\n      var result = await fetch(process.env.REACT_APP_URL+\"/pokemon/catch\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify ( pokemon )\n      });\n\n      if ( result.ok ) {\n        alert ( pokemon.nick_name + \" has been captured. You can view your pokemon on My Pokemons.\" );\n\n        addPokemonToMyList ( pokemon );\n      }\n\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return (\n    <React.Fragment>\n        <Container>\n\n          <ImageBox>\n            <img src={pokemon.sprites.front_default} alt={ pokemon.name } />\n          </ImageBox>\n\n          <Content>\n\n              <Title>\n                { String.capitalizeFirstLetter( pokemon.name ) }\n              </Title>\n\n              <Description>\n                <Type>\n                  { pokemon.types.map ( (child, i ) => (\n                    <p key=\"i\">{ String.capitalizeFirstLetter ( child.type.name ) } Type</p>\n                  ))}\n                </Type>\n                <hr />\n\n                <h4>Moves</h4>\n\n                  <Move>\n                    { pokemon.moves.slice (0, showMore.count ).map ( ( child, i ) => (\n                        <p key={child.move.name}>\n                          { String.capitalizeFirstLetter ( child.move.name ) }\n                        </p>\n                    ))}\n                  </Move>\n\n                  { showMore.expanded === true ? (\n                      <a\n                        onClick={ (e) => handleShowMore( false ) }>\n                        Show Less\n                      </a>\n                    ) : (\n                      <a\n                        onClick={ (e) => handleShowMore( true ) }>\n                        Show More\n                      </a>\n                    )\n                  }\n\n\n              </Description>\n\n          </Content>\n\n          <BottomMenu>\n            <Link\n              to=\"/\"\n              title=\"Pokemon Database\"\n              >\n              <button>\n                Database\n              </button>\n            </Link>\n\n              <button\n                onClick={ handleSuccessCatch.bind ( this, pokemon ) }\n                title=\"Add To My PokeList\"\n              >\n                Catch\n              </button>\n\n              <Link\n                to=\"/my-list\"\n                title=\"Pokemon Database\"\n                >\n                <button>\n                  My Pokemon\n                </button>\n              </Link>\n          </BottomMenu>\n\n        </Container>\n\n    </React.Fragment>\n  );\n};\n","import React, { useContext, useReducer, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { GlobalContext } from '../context/GlobalState';\n\nimport styled from '@emotion/styled';\n\nimport String from '../lib/String';\n\n\nconst Item = styled.div`\n  text-align: center;\n\n  button {\n    margin: 5px 5px;\n    padding: 8px 16px;\n    font-weight: 600;\n    border-radius: 9999px;\n    color: rgba(31, 41, 55, 1);\n    display: inline-block;\n    background-color: rgba(209, 213, 219, 1);\n  }\n\n  button:hover {\n    background-color: rgba(156, 163, 175, 1);\n  }\n`;\n\nconst Image = styled.img `\n  margin: 0 auto;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  margin-left: 20px;\n  margin-right: 20px;\n  justify-content: center;\n\n  /* Responsive layout - makes a one column layout instead of a two-column layout */\n  @media (max-width: 320) {\n    flex-direction: column;\n  }\n`;\n\nconst Box = styled.div`\n  padding-left: 5px;\n  padding-right: 5px;\n  margin-left: 5px;\n  margin-right: 5px;\n  height: 25vh;\n  -webkit-align-items: center;\n  align-items: center;\n  --tw-bg-opacity: 1;\n  background-color: rgba(243, 244, 246, var(--tw-bg-opacity));\n  margin-bottom: 10px;\n  --tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(0 0 #0000, 0 0 #0000), var(--tw-shadow);\n`;\n\n\nexport const PokemonList = () => {\n  const {\n    pokemons,\n    loading,\n    error,\n    removePokemonFromMyList,\n    fetchData\n  } = useContext(GlobalContext);\n\n  useEffect ( () => {\n      // Fetch pokemons from db\n      fetchData();\n  }, []);\n\n  const handleRelease = async ( pokemon ) => {\n    try {\n      let result = await fetch(process.env.REACT_APP_URL+\"/pokemon/release\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify ( pokemon )\n      });\n\n      if ( result ) {\n        alert ( pokemon.nick_name + \" has been released.\" );\n        removePokemonFromMyList ( pokemon );\n      }\n\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return (\n    <React.Fragment>\n        <div className=\"container mx-auto\">\n          <h3 className=\"text-center text-3xl mt-20 text-base leading-8 text-black font-bold tracking-wide uppercase\">\n            Pokemon List\n          </h3>\n          <div className=\"flex items-center mt-24 mb-10\">\n            <div className=\"flex-grow text-right px-4 py-2 m-2\">\n              <Link to=\"/\">\n                <button className=\"bg-green-400 hover:bg-green-500 text-white font-semibold py-2 px-4 rounded inline-flex items-center\">\n                  <span className=\"pl-2\">Back To Pokemon List</span>\n                </button>\n              </Link>\n            </div>\n          </div>\n\n          <React.Fragment>\n\n            { loading ? (\n              \"Loading\"\n\n            ) : (\n              <React.Fragment>\n\n                { pokemons.length > 0 ? (\n                  <Container>\n                    <React.Fragment>\n                      { pokemons.map( (pokemon, i) => (\n                        <Box key={ pokemon._id }>\n                            <Item>\n                              <Image src={pokemon.image_url} alt={ pokemon.name } />\n                              <p className=\"text-gray-900 leading-none\">\n                                { String.capitalizeFirstLetter( pokemon.nick_name ) }\n                              </p>\n                              <div>\n                                <button\n                                  onClick={() => handleRelease ( pokemon ) }\n                                  title=\"Remove\"\n                                >\n                                  Release\n                                </button>\n                              </div>\n                            </Item>\n                        </Box>\n                      ))}\n                    </React.Fragment>\n                  </Container>\n                ) : (\n                  <p className=\"text-center bg-gray-100 text-gray-500 py-5\">No data.</p>\n                )}\n              </React.Fragment>\n            )}\n\n            { error ? error : null }\n          </React.Fragment>\n\n        </div>\n      </React.Fragment>\n\n  );\n};\n","import { Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nimport { Home } from './components/Home';\nimport { PokemonDetail } from './components/PokemonDetail';\nimport { PokemonList } from './components/MyPokemonList';\n\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/detail/:name\" component={PokemonDetail} exact />\n          <Route path=\"/my-list\" component={PokemonList} exact />\n        </Switch>\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter } from 'react-router-dom';\nimport './tailwind.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloProvider, ApolloClient, InMemoryCache } from '@apollo/client';\n\n// URI from GraphQL PokeAPI\nconst client = new ApolloClient({\n  uri: 'https://graphql-pokeapi.vercel.app/api/graphql',//'https://48p1r2roz4.sse.codesandbox.io',\n  cache: new InMemoryCache()\n});\n\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <HashRouter basename={process.env.REACT_APP_URL}>\n      <App />\n    </HashRouter>\n  </ApolloProvider>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}